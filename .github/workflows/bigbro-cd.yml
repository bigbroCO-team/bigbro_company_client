name: bigbro-cd

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build and push
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }} \
            -t ${{ secrets.DOCKER_USERNAME }}/bigbro_company-client:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/bigbro_company-client:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create SSH key
        run: |
          echo "${{ secrets.SSH_PEM_KEY }}" > SSH_PEM_KEY.pem
          chmod 600 SSH_PEM_KEY.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i "SSH_PEM_KEY.pem" ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            cd /home/ubuntu/app
            docker pull ${{ secrets.DOCKER_USERNAME }}/bigbro_company-client:latest

            RUNNING=$(docker ps --format '{{.Names}}' | grep bigbro_company-client-blue || true)
            if [ -n "$RUNNING" ]; then
              NEW_COLOR=green
              OLD_COLOR=blue
              NEW_PORT=3001
              OLD_PORT=3000
            else
              NEW_COLOR=blue
              OLD_COLOR=green
              NEW_PORT=3000
              OLD_PORT=3001
            fi

            docker run -d \
              --name bigbro_company-client-${NEW_COLOR} \
              -p ${NEW_PORT}:${NEW_PORT} \
              -e NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }} \
              ${{ secrets.DOCKER_USERNAME }}/bigbro_company-client:latest

            docker stop bigbro_company-client-${OLD_COLOR} || true
            docker rm bigbro_company-client-${OLD_COLOR} || true
          EOF

      - name: Cleanup SSH key
        if: always()
        run: rm -f SSH_PEM_KEY.pem

      - name: Success Discord Notification
        uses: sarisia/actions-status-discord@v1.11.0
        if: success()
        with:
          webhook: ${{ secrets.WEBHOOK_URL }}
          title: '✅ BIGBRO_CLIENT CD'
          status: ${{ job.status }}
          content: '배포가 완료되었습니다.'
          username: BIGBRO_CLIENT bot

      - name: Failure notification to discord
        uses: sarisia/actions-status-discord@v1.11.0
        if: failure()
        with:
          webhook: ${{ secrets.WEBHOOK_URL }}
          title: '❌ BIGBRO_CLIENT CD'
          content: '배포에 실패했습니다.'
          status: ${{ job.status }}
          username: BIGBRO_CLIENT bot
